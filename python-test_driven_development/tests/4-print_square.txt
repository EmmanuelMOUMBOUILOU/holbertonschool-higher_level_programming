===============================
Tests for 4-print_square.py
===============================

This function prints a square using the ``#`` character. The ``size`` parameter
determines both the height and width of the square.

Import the function first:

    >>> print_square = __import__('4-print_square').print_square

Try a small square:

    >>> print_square(2)
    ##
    ##

Try a medium square:

    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

Try a larger square:

    >>> print_square(7)
    #######
    #######
    #######
    #######
    #######
    #######
    #######

When size is zero, nothing is printed:

    >>> print_square(0)

Invalid types raise an error:

    >>> print_square("size")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(3.14)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([4])
    Traceback (most recent call last):
    TypeError: size must be an integer

Negative values raise a ValueError:

    >>> print_square(-2)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Type check comes before value check:

    >>> print_square(-9.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Missing arguments:

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
