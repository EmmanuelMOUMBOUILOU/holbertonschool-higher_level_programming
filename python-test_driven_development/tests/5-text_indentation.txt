>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text_indentation("Are you ready?")
Are you ready?
<BLANKLINE>

>>> text_indentation("Yes! Let's begin: with confidence.")
Yes! Let's begin:
<BLANKLINE>
with confidence.
<BLANKLINE>

>>> text_indentation("  Just testing leading spaces.")
  Just testing leading spaces.
<BLANKLINE>

>>> text_indentation("Ending with nothing new")
Ending with nothing new

>>> text_indentation("   This:  should work.  Right?")
   This:
<BLANKLINE>
should work.
<BLANKLINE>
Right?
<BLANKLINE>

>>> text_indentation("Line one.\nLine two.\nLine three.")
Line one.
<BLANKLINE>
<BLANKLINE>
Line two.
<BLANKLINE>
<BLANKLINE>
Line three.
<BLANKLINE>

>>> text_indentation("\n\nBegin after blanks.")
<BLANKLINE>
<BLANKLINE>
Begin after blanks.
<BLANKLINE>

>>> text_indentation("Multiple:markers?yes.this is it")
Multiple:
<BLANKLINE>
markers?
<BLANKLINE>
yes.
<BLANKLINE>
this is it

>>> text_indentation("  Hello.  \n  Again: here?")
  Hello.
<BLANKLINE>
<BLANKLINE>
  Again:
<BLANKLINE>
here?
<BLANKLINE>

>>> text_indentation("abc:def.ghi?jkl")
abc:
<BLANKLINE>
def.
<BLANKLINE>
ghi?
<BLANKLINE>
jkl

>>> text_indentation(42)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(["not", "a", "string"])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string
